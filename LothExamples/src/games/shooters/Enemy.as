/*This class draws bullets, moves them across stage, and checks to see if they hit any enemies */package games.shooters {	import away3d.containers.Scene3D;	import away3d.entities.Mesh;	import flash.events.Event;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform ;	import flash.geom.Vector3D;import flash.utils.Timer;    import flash.events.TimerEvent;	//	public class Enemy {		[Embed(source="assets/sounds/Gun.mp3")]		public static var Shot : Class;		// the bullets will have a speed		private static var _speed : int;		private static var _sound : Sound;		private static var _channel : SoundChannel;		private static var _volume : SoundTransform;		private static var _scene : Scene3D;		private static var _enemys : Vector.<Mesh>;		private static var _model : Mesh;		private static var _viewLimitX : int;		private static var _viewLimitY : int;		//each enemy ship will fire bullets at an interval		private static var _shootTimer:Timer;				//each enemy has a starting health and current health		//private static  var _health:int;		private static var _enemysHealth : Vector.<int>;		//private static  var _maxHealth:int;		static public function init(model : Mesh, ViewLimitX : int = 2000, ViewLimitY : int = 1000) : void {			_viewLimitX = ViewLimitX;			_viewLimitY = ViewLimitY;			_volume = new SoundTransform();			_channel = new SoundChannel();			_volume.volume = .03;			_sound = new Shot();			_enemys = new Vector.<Mesh>();			_enemysHealth = new Vector.<int>();			_speed = 100;			_model = model;			_model.rotationZ = 180;		}		public static function get enemys() : Vector.<Mesh> {			return _enemys;		}		static public function set scene(Scene : Scene3D) : void {			_scene = Scene;		}		static public function addEnemy(p : Vector3D) : void {			// _channel = _sound.play();			// _channel.soundTransform = _volume;			var b : Mesh = Mesh(_model.clone());			b.position = p.add(new Vector3D(130, 50, 0));			_scene.addChild(b);			_enemys.push(b);			_enemysHealth.push(3);		}		// this logic will happen at frame rate		public static function update(e : Event = null) : void {			/*for (var i : int; i < _bullets.length; i++) {			_bullets[i].x -= _speed;			// kill bullet if out of screen			if (_bullets[i].x < -_viewLimit) kill(i);			}*/			/*			// add to the miss count			Game.main.updateStat("misses",1);			return;			}			// iterate through the enemy ship list, and see if this bullet is hitting any enemies			for(var i:int=0; i<EnemyShip.list.length; i++)			{			// if this bullet is hitting this enemy in the list			if(this.hitTestObject(EnemyShip.list[i].hitRect))			{			// have the hit enemy take damage			EnemyShip.list[i].takeDamage(1);			// kill the bullet			kill();								break;			}			}*/		}		private static function kill(n : uint) : void {			_scene.removeChild(_enemys[n]);			_enemys.splice(n, 1);			_enemysHealth.splice(n, 1);		}	}}